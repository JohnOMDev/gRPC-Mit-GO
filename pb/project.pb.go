// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: serv.proto

package datasvr

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_serv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_serv_proto_rawDescGZIP(), []int{0}
}

type Res struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Line `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Res) Reset() {
	*x = Res{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_serv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_serv_proto_rawDescGZIP(), []int{1}
}

func (x *Res) GetData() []*Line {
	if x != nil {
		return x.Data
	}
	return nil
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	EleUsage string `protobuf:"bytes,2,opt,name=eleUsage,proto3" json:"eleUsage,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_serv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_serv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_serv_proto_rawDescGZIP(), []int{2}
}

func (x *Line) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Line) GetEleUsage() string {
	if x != nil {
		return x.EleUsage
	}
	return ""
}

var File_serv_proto protoreflect.FileDescriptor

var file_serv_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x76, 0x72, 0x22, 0x05, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x22, 0x28, 0x0a, 0x03,
	0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x76, 0x72, 0x2e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x32, 0x2a,
	0x0a, 0x05, 0x43, 0x73, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0c,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x76, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x76, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_serv_proto_rawDescOnce sync.Once
	file_serv_proto_rawDescData = file_serv_proto_rawDesc
)

func file_serv_proto_rawDescGZIP() []byte {
	file_serv_proto_rawDescOnce.Do(func() {
		file_serv_proto_rawDescData = protoimpl.X.CompressGZIP(file_serv_proto_rawDescData)
	})
	return file_serv_proto_rawDescData
}

var file_serv_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_serv_proto_goTypes = []interface{}{
	(*Req)(nil),  // 0: datasvr.Req
	(*Res)(nil),  // 1: datasvr.Res
	(*Line)(nil), // 2: datasvr.line
}
var file_serv_proto_depIdxs = []int32{
	2, // 0: datasvr.Res.Data:type_name -> datasvr.line
	0, // 1: datasvr.Csver.Get:input_type -> datasvr.Req
	1, // 2: datasvr.Csver.Get:output_type -> datasvr.Res
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_serv_proto_init() }
func file_serv_proto_init() {
	if File_serv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_serv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_serv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_serv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_serv_proto_goTypes,
		DependencyIndexes: file_serv_proto_depIdxs,
		MessageInfos:      file_serv_proto_msgTypes,
	}.Build()
	File_serv_proto = out.File
	file_serv_proto_rawDesc = nil
	file_serv_proto_goTypes = nil
	file_serv_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CsverClient is the client API for Csver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CsverClient interface {
	Get(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error)
}

type csverClient struct {
	cc grpc.ClientConnInterface
}

func NewCsverClient(cc grpc.ClientConnInterface) CsverClient {
	return &csverClient{cc}
}

func (c *csverClient) Get(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/datasvr.Csver/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CsverServer is the server API for Csver service.
type CsverServer interface {
	Get(context.Context, *Req) (*Res, error)
}

// UnimplementedCsverServer can be embedded to have forward compatible implementations.
type UnimplementedCsverServer struct {
}

func (*UnimplementedCsverServer) Get(context.Context, *Req) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterCsverServer(s *grpc.Server, srv CsverServer) {
	s.RegisterService(&_Csver_serviceDesc, srv)
}

func _Csver_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CsverServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasvr.Csver/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CsverServer).Get(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _Csver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datasvr.Csver",
	HandlerType: (*CsverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Csver_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serv.proto",
}
